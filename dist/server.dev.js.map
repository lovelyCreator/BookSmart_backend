{"version":3,"sources":["server.js"],"names":["express","require","http","cors","dotenv","bodyParser","fileUpload","app","server","createServer","use","corsOptions","origin","config","json","limit","urlencoded","extended","db","mongoose","connect","url","useNewUrlParser","useUnifiedTopology","then","console","log","err","process","exit","get","req","res","message","PORT","env","listen"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMI,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,oBAAD,CAA1B;;AAEA,IAAMM,GAAG,GAAGP,OAAO,EAAnB;AAEA,IAAMQ,MAAM,GAAGN,IAAI,CAACO,YAAL,CAAkBF,GAAlB,CAAf;AACAA,GAAG,CAACG,GAAJ,CAAQJ,UAAU,EAAlB;;AACAL,OAAO,CAAC,oBAAD,CAAP,CAA8BO,MAA9B,E,CACA;;;AAIA,IAAIG,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE;AADQ,CAAlB;AAGAR,MAAM,CAACS,MAAP;AACAN,GAAG,CAACG,GAAJ,CAAQP,IAAI,CAACQ,WAAD,CAAZ;AACAJ,GAAG,CAACG,GAAJ,CAAQL,UAAU,CAACS,IAAX,CAAgB;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAhB,CAAR;AACAR,GAAG,CAACG,GAAJ,CAAQL,UAAU,CAACW,UAAX,CAAsB;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBE,EAAAA,QAAQ,EAAE;AAA3B,CAAtB,CAAR,E,CACA;;AACAV,GAAG,CAACG,GAAJ,CAAQV,OAAO,CAACc,IAAR,EAAR,E,CACA;AACA;;AACAP,GAAG,CAACG,GAAJ,CAAQV,OAAO,CAACgB,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;;AAEA,IAAMC,EAAE,GAAGjB,OAAO,CAAC,cAAD,CAAlB;;AACAiB,EAAE,CAACC,QAAH,CACGC,OADH,CACWF,EAAE,CAACG,GADd,EACmB;AACfC,EAAAA,eAAe,EAAE,IADF;AAEfC,EAAAA,kBAAkB,EAAE;AAFL,CADnB,EAKGC,IALH,CAKQ,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,CAPH,WAQS,UAAAC,GAAG,EAAI;AACZF,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CC,GAA/C;AACAC,EAAAA,OAAO,CAACC,IAAR;AACD,CAXH,E,CAeA;;AACAtB,GAAG,CAACuB,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BA,EAAAA,GAAG,CAAClB,IAAJ,CAAS;AAAEmB,IAAAA,OAAO,EAAE;AAAX,GAAT;AACD,CAFD;;AAIAhC,OAAO,CAAC,6BAAD,CAAP,CAAuCM,GAAvC;;AACAN,OAAO,CAAC,+BAAD,CAAP,CAAyCM,GAAzC;;AACAN,OAAO,CAAC,yBAAD,CAAP,CAAmCM,GAAnC;;AACAN,OAAO,CAAC,6BAAD,CAAP,CAAuCM,GAAvC,E,CACA;AAEA;;;AACA,IAAM2B,IAAI,GAAGN,OAAO,CAACO,GAAR,CAAYD,IAAZ,IAAoB,IAAjC,C,CACA;;AACA1B,MAAM,CAAC4B,MAAP,CAAcF,IAAd,EAAoB,YAAM;AACxBT,EAAAA,OAAO,CAACC,GAAR,qCAAyCQ,IAAzC;AACD,CAFD","sourcesContent":["const express = require(\"express\");\r\nconst http = require('http');\r\nconst cors = require(\"cors\");\r\nconst dotenv = require(\"dotenv\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst fileUpload = require('express-fileupload');\r\n\r\nconst app = express();\r\n\r\nconst server = http.createServer(app);\r\napp.use(fileUpload());\r\nrequire(\"./app/socketServer\")(server);\r\n// require(\"./app/walletavatar\")\r\n\r\n\r\n\r\nvar corsOptions = {\r\n  origin: \"*\"\r\n};\r\ndotenv.config();\r\napp.use(cors(corsOptions));\r\napp.use(bodyParser.json({ limit: '50mb' }));\r\napp.use(bodyParser.urlencoded({ limit: '50mb', extended: true }));\r\n// parse requests of content-type - application/json\r\napp.use(express.json());\r\n// mongoose.connect(\"mongodb://localhost/phantom-avatars\", { useNewUrlParser: true, useUnifiedTopology: true });\r\n// parse requests of content-type - application/x-www-form-urlencoded\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\nconst db = require(\"./app/models\");\r\ndb.mongoose\r\n  .connect(db.url, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n  })\r\n  .then(() => {\r\n    console.log(\"Connected to the database!\");\r\n  })\r\n  .catch(err => {\r\n    console.log(\"Cannot connect to the database!\", err);\r\n    process.exit();\r\n  });\r\n\r\n\r\n\r\n// simple route\r\napp.get(\"/test\", (req, res) => {\r\n  res.json({ message: \"Welcome to bezkoder application.\" });\r\n});\r\n\r\nrequire(\"./app/routes/clinical.route\")(app);\r\nrequire(\"./app/routes/facilities.route\")(app);\r\nrequire(\"./app/routes/job.routes\")(app);\r\nrequire(\"./app/routes/admin.route.js\")(app);\r\n// require(\"./app/routes/image.routes\")(app);\r\n\r\n// set port, listen for requests\r\nconst PORT = process.env.PORT || 5000;\r\n// const HOST = \"0.0.0.0\";\r\nserver.listen(PORT, () => {\r\n  console.log(`Server is running on port ${PORT}.`);\r\n});\r\n\r\n"],"file":"server.dev.js"}