{"version":3,"sources":["clinical.model.js"],"names":["module","exports","mongoose","schema","Schema","firstName","type","String","required","lastName","userRole","email","phoneNumber","title","birthday","socialSecurityNumber","verifiedSocialSecurityNumber","address","streetAddress","streetAddress2","city","state","zip","photoImage","content","password","signature","require","logined","Boolean","entryDate","driverLicense","socialCard","physicalExam","ppd","mmr","healthcareLicense","resume","covidCard","bls","method","toObject","_id","object","id","Clinical","model"],"mappings":"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","sourcesContent":["module.exports = mongoose => {\r\n  var schema = mongoose.Schema({\r\n    firstName: {\r\n      type: String,\r\n      required: true,\r\n      default: ''\r\n    },\r\n    lastName: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    userRole: {\r\n      type: String\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: true,\r\n      // unique: true,\r\n    },\r\n    phoneNumber: {\r\n      type: String,\r\n      required: true,\r\n      default: ''\r\n    },\r\n    title: {\r\n      type: String,\r\n      required: true,\r\n      default: ''\r\n    },\r\n    birthday: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    socialSecurityNumber: {\r\n      type: String,\r\n      required: true,\r\n      default: ''\r\n    },\r\n    verifiedSocialSecurityNumber: {\r\n      type: String,\r\n      required: true,\r\n      default: ''\r\n    },\r\n    address: {\r\n      streetAddress: {\r\n        type: String,\r\n        required: true,\r\n        default: ''\r\n      },\r\n      streetAddress2: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      city: {\r\n        type: String,\r\n        required: true,\r\n        default: ''\r\n      },\r\n      state: {\r\n        type: String,\r\n        required: true,\r\n        default: ''\r\n      },\r\n      zip: {\r\n        type: String,\r\n        required: true,\r\n        default: ''\r\n      }\r\n    },\r\n    photoImage: {\r\n      type: { type: String, default: '' },\r\n      content: { type: String, default: '' }\r\n    },\r\n    password: {\r\n      type: String,\r\n      required: true,\r\n      default: ''\r\n    },\r\n    signature: {\r\n      type: String,\r\n      require: true,\r\n      default: '',\r\n    },\r\n    logined: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    entryDate: {\r\n      type: String\r\n    },\r\n    driverLicense: {\r\n      type: { type: String, default: '' },\r\n      content: { type: String, default: '' }\r\n    },\r\n    socialCard: {\r\n      type: { type: String, default: '' },\r\n      content: { type: String, default: '' }\r\n    },\r\n    physicalExam: {\r\n      type: { type: String, default: '' },\r\n      content: { type: String, default: '' }\r\n    },\r\n    ppd: {\r\n      type: { type: String, default: '' },\r\n      content: { type: String, default: '' }\r\n    },\r\n    mmr: {\r\n      type: { type: String, default: '' },\r\n      content: { type: String, default: '' }\r\n    },\r\n    healthcareLicense: {\r\n      type: { type: String, default: '' },\r\n      content: { type: String, default: '' }\r\n    },\r\n    resume: {\r\n      type: { type: String, default: '' },\r\n      content: { type: String, default: '' }\r\n    },\r\n    covidCard: {\r\n      type: { type: String, default: '' },\r\n      content: { type: String, default: '' }\r\n    },\r\n    bls: {\r\n      type: { type: String, default: '' },\r\n      content: { type: String, default: '' }\r\n    },\r\n  });\r\n\r\n  schema.method(\"toJSON\", function () {\r\n    const { _id, ...object } = this.toObject();\r\n    object.id = _id;\r\n    return object;\r\n  });\r\n\r\n\r\n  const Clinical = mongoose.model(\"Clinical\", schema); // Changed model name to \"Master\"\r\n  return Clinical;\r\n};"],"file":"clinical.model.dev.js"}