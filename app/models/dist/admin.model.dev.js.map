{"version":3,"sources":["admin.model.js"],"names":["module","exports","mongoose","schema","Schema","userStatus","type","Boolean","userRole","String","entryDate","Date","now","companyName","firstName","required","lastName","contactEmail","contactPhone","Number","password","contactPassword","facilityAcknowledgeTerm","signature","address","street","street2","city","state","zip","avatar","content","name","method","toObject","__v","_id","object","id","Admin","model"],"mappings":"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","sourcesContent":["module.exports = mongoose => {\r\n  var schema = mongoose.Schema({\r\n      userStatus: {\r\n          type: Boolean,\r\n          default: false\r\n      },\r\n      userRole: {\r\n          type: String,\r\n          default: '',\r\n          // required:true,\r\n      }\r\n      ,\r\n      entryDate: {\r\n          type: Date,\r\n          default: Date.now,\r\n      },\r\n      companyName: {\r\n          type: String,\r\n          default: '',\r\n      },\r\n      firstName: {\r\n          type: String,\r\n          required: true\r\n      },\r\n      lastName: {\r\n          type: String,\r\n          required: true\r\n      },\r\n      contactEmail: {\r\n          type: String,\r\n          required: true,\r\n      },\r\n      contactPhone: {\r\n          type: Number,\r\n          required: true,\r\n      },\r\n      password: {\r\n          type: String,\r\n          required: true,\r\n      },\r\n      contactPassword: {\r\n          type: String,\r\n          default: ''\r\n      },\r\n      facilityAcknowledgeTerm: {\r\n          type: Boolean,\r\n          default: false\r\n      },\r\n      signature: {\r\n          type: String,\r\n          default: ''\r\n      },\r\n      address: {\r\n          street: { type: String, required: true, default: '' },\r\n          street2: { type: String, default: '' },\r\n          city: { type: String, default: '' },\r\n          state: { type: String, default: '' },\r\n          zip: { type: String, default: '' },\r\n      },\r\n      avatar: {\r\n          content: { type: String, default: '' },\r\n          type: { type: String, default: '' },\r\n          name: { type: String, default: '' }\r\n      },\r\n  });\r\n\r\n  schema.method(\"toJSON\", function () {\r\n      const { __v, _id, ...object } = this.toObject();\r\n      object.id = _id;\r\n      return object;\r\n  });\r\n\r\n  const Admin = mongoose.model(\"Admin\", schema);\r\n  return Admin;\r\n};\r\n"],"file":"admin.model.dev.js"}