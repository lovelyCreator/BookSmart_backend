"use strict";var jwtEncode=require("jwt-encode"),db=require("../models"),_require=require("../utils/verifyToken"),setToken=_require.setToken,_require2=require("mongoose"),set=_require2.set,Facility=db.facilities,limitAccNum=100,expirationTime=1800;exports.signup=function(t,n){var r,o,s,a,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,console.log("register"),r=t.body,console.log("user",t.body),e.next=6,regeneratorRuntime.awrap(Facility.findOne({contactEmail:r.contactEmail}));case 6:if(o=e.sent,console.log("isUser---------------------\x3e",o),o){e.next=20;break}return r.entryDate=new Date,s=new Facility(r),console.log(s),e.next=14,regeneratorRuntime.awrap(s.save());case 14:a={email:r.contactEmail,userRole:r.userRole,iat:Math.floor(Date.now()/1e3),exp:Math.floor(Date.now()/1e3)+expirationTime},c=setToken(a),console.log(c),n.status(201).json({message:"Successfully Registered",token:c}),e.next=21;break;case 20:n.status(409).json({message:"The Email is already registered"});case 21:e.next=27;break;case 23:return e.prev=23,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",n.status(500).json({message:"An Error Occured!"}));case 27:case"end":return e.stop()}},null,null,[[0,23]])},exports.login=function(t,n){var r,o,s,a,c,i,l;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,console.log("LogIn"),r=t.body,o=r.contactEmail,s=r.password,a=r.userRole,console.log("email: ",o),e.next=6,regeneratorRuntime.awrap(Facility.findOne({contactEmail:o,password:s,userRole:a}));case 6:if(!(c=e.sent)){e.next=22;break}if(console.log("isUser",c),i={contactEmail:c.contactEmail,userRole:c.userRole,iat:Math.floor(Date.now()/1e3),exp:Math.floor(Date.now()/1e3)+expirationTime},l=setToken(i),console.log(l),l)return e.next=15,regeneratorRuntime.awrap(Facility.updateOne({contactEmail:o,userRole:a},{$set:{userStatus:!0}}));e.next=19;break;case 15:e.sent,n.status(200).json({message:"Successfully Logined!",token:l,user:c}),e.next=20;break;case 19:n.status(400).json({message:"Cannot logined User!"});case 20:e.next=23;break;case 22:n.status(404).json({message:"User Not Found! Please Register First."});case 23:e.next=29;break;case 25:return e.prev=25,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",n.status(500).json({message:"An Error Occured!"}));case 29:case"end":return e.stop()}},null,null,[[0,25]])},exports.Update=function(t,o){var n,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:console.log("updateSignal"),n=t.body,(s=t.user)&&(console.log("items"),Facility.findOneAndUpdate({user:s},{$set:n},{new:!1},function(e,t){if(e)o.status(500).json({error:e}),console.log(e);else{console.log("updated",t);var n={email:s.email,userRole:s.userRole,iat:Math.floor(Date.now()/1e3),exp:Math.floor(Date.now()/1e3)+expirationTime},r=setToken(n);console.log(r),o.status(200).json({message:"Trading Signals saved Successfully",token:r,user:t})}}));case 4:case"end":return e.stop()}})},exports.logout=function(t,n){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,console.log("Logout"),r=t.body,e.next=5,regeneratorRuntime.awrap(Auth.updateOne({accountId:accountId},{$set:{logined:!1}}));case 5:e.sent,n.status(200).json({email:r,logined:logined}),e.next=13;break;case 9:return e.prev=9,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",n.status(500).json({message:"An Error Occured!"}));case 13:case"end":return e.stop()}},null,null,[[0,9]])};
//# sourceMappingURL=facilities.controller.min.js.map
